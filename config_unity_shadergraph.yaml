sources:
  - id: "shadergraph_nodes_or-gpt4o-mini"
    url: "https://docs.unity3d.com/Packages/com.unity.shadergraph@17.4/manual/Node-Library.html"
    urls:
      - "https://docs.unity3d.com/Packages/com.unity.shadergraph@17.4/manual/Node-Library.html"
      - "https://docs.unity3d.com/Packages/com.unity.shadergraph@17.4/manual/Artistic-Nodes.html"
      - "https://docs.unity3d.com/Packages/com.unity.shadergraph@17.4/manual/Channel-Nodes.html"
      - "https://docs.unity3d.com/Packages/com.unity.shadergraph@17.4/manual/Custom-Render-Texture-Nodes.html"
      - "https://docs.unity3d.com/Packages/com.unity.shadergraph@17.4/manual/Input-Nodes.html"
      - "https://docs.unity3d.com/Packages/com.unity.shadergraph@17.4/manual/Math-Nodes.html"
      - "https://docs.unity3d.com/Packages/com.unity.shadergraph@17.4/manual/Procedural-Nodes.html"
      - "https://docs.unity3d.com/Packages/com.unity.shadergraph@17.4/manual/ui-nodes.html"
      - "https://docs.unity3d.com/Packages/com.unity.shadergraph@17.4/manual/Utility-Nodes.html"
      - "https://docs.unity3d.com/Packages/com.unity.shadergraph@17.4/manual/UV-Nodes.html"
      - "https://docs.unity3d.com/Packages/com.unity.shadergraph@17.4/manual/Block-Node.html"
    title: "Unity Shadergraph node library structure"
    description: "Extract the hierarchical structure of Unity ShaderGraph nodes, including categories, subcategories, and individual nodes with descriptions. Require graph_nodes and block_nodes arrays with nested categories and nodes."
    instruction: |
      From the crawled content of this page, extract Unity ShaderGraph nodes, categories, or subcategories present.
      Output a single NodeLibrary object.
      - If this page is the main Node Library page, populate graph_nodes with category objects (name only, no subcategories or nodes), and block_nodes similarly.
      - If this page is a category page (e.g., Artistic Nodes), populate graph_nodes with a single category object containing its name, and either subcategories (if the page has sections like Adjustment, Blend) with their nodes, or direct nodes if no subcategories.
      - Do not output multiple objects or empty categories. Ensure subcategories are nested under their parent category.
      - Only include data actually present on the page.
    prompt_file: "none"
    pydantic_model: |
      from pydantic import BaseModel, Field
      from typing import List, Optional

      class ShaderNode(BaseModel):
          name: str = Field(..., description="Name of the shader node.")
          description: str = Field(..., description="Description of the shader node.")

      class Subcategory(BaseModel):
          name: str = Field(..., description="Name of the subcategory.")
          nodes: List[ShaderNode] = Field(..., description="List of nodes in this subcategory.")

      class Category(BaseModel):
          name: str = Field(..., description="Name of the category.")
          subcategories: Optional[List[Subcategory]] = Field(None, description="List of subcategories, if any.")
          nodes: Optional[List[ShaderNode]] = Field(None, description="List of nodes directly in this category, if no subcategories.")

      class NodeLibrary(BaseModel):
          graph_nodes: List[Category] = Field(..., description="List of graph node categories.")
          block_nodes: List[Category] = Field(..., description="List of block node categories.")
    llm: "openrouter_gpt4o-mini"
    temperature: 0.0
    top_p: 0.9
    max_tokens: 8000
    out_file: "shadergraph_gpt4o-mini"
    extraction_type: "schema"
    css_selector: null
    headless: true
    cache_mode: "BYPASS"
    word_count_threshold: 1
    page_timeout: 80000
    workflow: "llm"





