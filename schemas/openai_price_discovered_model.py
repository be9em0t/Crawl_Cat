from pydantic import BaseModel, Field
from typing import Optional, Any
from typing import List, Optional

class DiscoveredModel_Priority_processing(BaseModel):
    cost: Optional[float] = Field(..., description="Cost for priority processing.", example=0.07)
    units: Optional[str] = Field(..., description="Units for priority processing pricing.", example="USD per 1K tokens")

class DiscoveredModel_Image_generation(BaseModel):
    cost: Optional[float] = Field(..., description="Cost for image generation.", example=0.1)
    units: Optional[str] = Field(..., description="Units for image generation pricing.", example="USD per image")

class DiscoveredModel_Subscription(BaseModel):
    tier_name: Optional[str] = Field(..., description="Name of the subscription tier.", example="Pro")
    monthly_cost: Optional[float] = Field(..., description="Monthly cost of the subscription.", example=20.0)
    units: Optional[str] = Field(..., description="Units for subscription pricing.", example="USD per month")

class DiscoveredModel_Assistants(BaseModel):
    cost: Optional[float] = Field(..., description="Cost for using assistants.", example=0.04)
    units: Optional[str] = Field(..., description="Units for assistants pricing.", example="USD per session")

class DiscoveredModel_Modelsitem(BaseModel):
    model_name: Optional[str] = Field(..., description="The name of the model.", example="GPT-4")
    input_cost: Optional[float] = Field(..., description="Cost for input tokens.", example=0.03)
    output_cost: Optional[float] = Field(..., description="Cost for output tokens.", example=0.06)
    units: Optional[str] = Field(..., description="Units for the pricing.", example="USD per 1K tokens")
    notes: Optional[str] = Field(None, description="Additional notes about the model pricing.", example="Available in limited regions")

class DiscoveredModel_Responses(BaseModel):
    cost: Optional[float] = Field(..., description="Cost for using the responses API.", example=0.02)
    units: Optional[str] = Field(..., description="Units for responses API pricing.", example="USD per response")

class DiscoveredModel_Realtime(BaseModel):
    cost: Optional[float] = Field(..., description="Cost for real-time processing.", example=0.05)
    units: Optional[str] = Field(..., description="Units for real-time processing pricing.", example="USD per 1K tokens")

class DiscoveredModel(BaseModel):
    models: Optional[List[DiscoveredModel_Modelsitem]] = Field(..., description="List of models with their pricing details.", example={"model_name": "GPT-4", "input_cost": 0.03, "output_cost": 0.06, "units": "USD per 1K tokens", "notes": "Available in limited regions"})
    realtime: Optional[DiscoveredModel_Realtime] = Field(None, description="Pricing details for real-time processing.")
    image_generation: Optional[DiscoveredModel_Image_generation] = Field(None, description="Pricing details for image generation.")
    responses: Optional[DiscoveredModel_Responses] = Field(None, description="Pricing details for responses API.")
    assistants: Optional[DiscoveredModel_Assistants] = Field(None, description="Pricing details for assistants.")
    subscription: Optional[DiscoveredModel_Subscription] = Field(None, description="Details of subscription tiers.")
    priority_processing: Optional[DiscoveredModel_Priority_processing] = Field(None, description="Pricing details for priority processing.")

# Field glossary (generated by LLM)
# ````json
# {
#   "models": {
#     "name": "models",
#     "description": "List of models with their pricing details.",
#     "examples": [
#       "GPT-4"
#     ]
#   },
#   "model_name": {
#     "name": "model_name",
#     "description": "The name of the model.",
#     "examples": [
#       "GPT-4"
#     ]
#   },
#   "input_cost": {
#     "name": "input_cost",
#     "description": "Cost for input tokens.",
#     "examples": [
#       0.03
#     ]
#   },
#   "output_cost": {
#     "name": "output_cost",
#     "description": "Cost for output tokens.",
#     "examples": [
#       0.06
#     ]
#   },
#   "units": {
#     "name": "units",
#     "description": "Units for the pricing.",
#     "examples": [
#       "USD per 1K tokens"
#     ]
#   },
#   "notes": {
#     "name": "notes",
#     "description": "Additional notes about the model pricing.",
#     "examples": [
#       "Available in limited regions"
#     ]
#   },
#   "realtime": {
#     "name": "realtime",
#     "description": "Pricing details for real-time processing.",
#     "examples": [
#       "USD per 1K tokens"
#     ]
#   },
#   "image_generation": {
#     "name": "image_generation",
#     "description": "Pricing details for image generation.",
#     "examples": [
#       "USD per image"
#     ]
#   },
#   "responses": {
#     "name": "responses",
#     "description": "Pricing details for responses API.",
#     "examples": [
#       "USD per response"
#     ]
#   },
#   "assistants": {
#     "name": "assistants",
#     "description": "Pricing details for assistants.",
#     "examples": [
#       "USD per session"
#     ]
#   },
#   "subscription": {
#     "name": "subscription",
#     "description": "Details of subscription tiers.",
#     "examples": [
#       "Pro"
#     ]
#   },
#   "tier_name": {
#     "name": "tier_name",
#     "description": "Name of the subscription tier.",
#     "examples": [
#       "Pro"
#     ]
#   },
#   "monthly_cost": {
#     "name": "monthly_cost",
#     "description": "Monthly cost of the subscription.",
#     "examples": [
#       20.0
#     ]
#   },
#   "priority_processing": {
#     "name": "priority_processing",
#     "description": "Pricing details for priority processing.",
#     "examples": [
#       "USD per 1K tokens"
#     ]
#   }
# }
# ````
