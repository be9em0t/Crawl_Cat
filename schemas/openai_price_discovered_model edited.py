from pydantic import BaseModel, Field
from typing import Optional, Any
from typing import List, Optional

class DiscoveredModel_Sectionsitem(BaseModel):
    name: Optional[str] = Field(..., description="The name of the section.", example="Batch API")
    description: Optional[str] = Field(..., description="A brief description of the section.", example="Save 50% on inputs and outputs with the Batch API and run tasks asynchronously over 24 hours.")
    link: Optional[str] = Field(..., description="URL link to more information about the section.", example="https://platform.openai.com/docs/guides/batch")

class DiscoveredModel(BaseModel):
    title: Optional[str] = Field(..., description="The main title of the page.", example="API Pricing")
    sections: Optional[List[DiscoveredModel_Sectionsitem]] = Field(..., description="List of sections on the pricing page.", example={"name": "Batch API", "description": "Save 50% on inputs and outputs with the Batch API and run tasks asynchronously over 24 hours.", "link": "https://platform.openai.com/docs/guides/batch"})

# Field glossary (generated by LLM)
# ````json
# [
#   {
#     "name": "title",
#     "description": "The main title of the page.",
#     "examples": [
#       "API Pricing"
#     ]
#   },
#   {
#     "name": "sections",
#     "description": "List of sections on the pricing page.",
#     "examples": []
#   },
#   {
#     "name": "name",
#     "description": "The name of the section.",
#     "examples": [
#       "Batch API"
#     ]
#   },
#   {
#     "name": "description",
#     "description": "A brief description of the section.",
#     "examples": [
#       "Save 50% on inputs and outputs with the Batch API and run tasks asynchronously over 24 hours."
#     ]
#   },
#   {
#     "name": "link",
#     "description": "URL link to more information about the section.",
#     "examples": [
#       "https://platform.openai.com/docs/guides/batch"
#     ]
#   }
# ]
# ````
